/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: proto-ota.proto */

#ifndef PROTOBUF_C_proto_2dota_2eproto__INCLUDED
#define PROTOBUF_C_proto_2dota_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _FirmUpdateStart FirmUpdateStart;
typedef struct _FirmPktReq FirmPktReq;
typedef struct _FirmPktRes FirmPktRes;


/* --- enums --- */


/* --- messages --- */

struct  _FirmUpdateStart
{
  ProtobufCMessage base;
  protobuf_c_boolean has_image_size;
  int32_t image_size;
};
#define FIRM_UPDATE_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&firm_update_start__descriptor) \
    , 0, 0 }


struct  _FirmPktReq
{
  ProtobufCMessage base;
  protobuf_c_boolean has_numbytes;
  int32_t numbytes;
  protobuf_c_boolean has_advanceaddress;
  protobuf_c_boolean advanceaddress;
};
#define FIRM_PKT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&firm_pkt_req__descriptor) \
    , 0, 0, 0, 0 }


struct  _FirmPktRes
{
  ProtobufCMessage base;
  size_t n_pkt;
  ProtobufCBinaryData *pkt;
};
#define FIRM_PKT_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&firm_pkt_res__descriptor) \
    , 0,NULL }


/* FirmUpdateStart methods */
void   firm_update_start__init
                     (FirmUpdateStart         *message);
size_t firm_update_start__get_packed_size
                     (const FirmUpdateStart   *message);
size_t firm_update_start__pack
                     (const FirmUpdateStart   *message,
                      uint8_t             *out);
size_t firm_update_start__pack_to_buffer
                     (const FirmUpdateStart   *message,
                      ProtobufCBuffer     *buffer);
FirmUpdateStart *
       firm_update_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   firm_update_start__free_unpacked
                     (FirmUpdateStart *message,
                      ProtobufCAllocator *allocator);
/* FirmPktReq methods */
void   firm_pkt_req__init
                     (FirmPktReq         *message);
size_t firm_pkt_req__get_packed_size
                     (const FirmPktReq   *message);
size_t firm_pkt_req__pack
                     (const FirmPktReq   *message,
                      uint8_t             *out);
size_t firm_pkt_req__pack_to_buffer
                     (const FirmPktReq   *message,
                      ProtobufCBuffer     *buffer);
FirmPktReq *
       firm_pkt_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   firm_pkt_req__free_unpacked
                     (FirmPktReq *message,
                      ProtobufCAllocator *allocator);
/* FirmPktRes methods */
void   firm_pkt_res__init
                     (FirmPktRes         *message);
size_t firm_pkt_res__get_packed_size
                     (const FirmPktRes   *message);
size_t firm_pkt_res__pack
                     (const FirmPktRes   *message,
                      uint8_t             *out);
size_t firm_pkt_res__pack_to_buffer
                     (const FirmPktRes   *message,
                      ProtobufCBuffer     *buffer);
FirmPktRes *
       firm_pkt_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   firm_pkt_res__free_unpacked
                     (FirmPktRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*FirmUpdateStart_Closure)
                 (const FirmUpdateStart *message,
                  void *closure_data);
typedef void (*FirmPktReq_Closure)
                 (const FirmPktReq *message,
                  void *closure_data);
typedef void (*FirmPktRes_Closure)
                 (const FirmPktRes *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor firm_update_start__descriptor;
extern const ProtobufCMessageDescriptor firm_pkt_req__descriptor;
extern const ProtobufCMessageDescriptor firm_pkt_res__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_proto_2dota_2eproto__INCLUDED */
